#include <p18f4550.h> // Include Controller specific .h
 #include "vector_relocate.h" // Vector Remapping for USB HID Bootloader
 // Declarations
 #define lrbit PORTBbits.RB1 // SW0 interfaced to RB1
 #define rlbit PORTBbits.RB0 // SW1 interfaced to RB0
 #define buzzer PORTCbits.RC2 // Buzzer interfaced to RC2
 #define relay PORTDbits.RD7 // Relay interfaced to RD7
 // Function Prototypes
 void msdelay(unsigned int time); // Function for delay
 // Start of Program Code
 void main() // Main Program
 {
    unsigned char i, val = 0; // Variable to latch the switch condition
    // Initialize
    INTCON2bits.RBPU = 0; // To activate the internal pull on PORTB
    ADCON1 = 0x0F;         // To disable all analog inputs
    TRISBbits.RB0 = 1;     // To configure RB0 as input for sensing SW1
    TRISBbits.RB1 = 1;     // To configure RB1 as input for sensing SW0
    TRISDbits.TRISD7 = 0;  // To configure RD7 (relay) as output
    TRISCbits.TRISC2 = 0;  // To configure RC2 (buzzer) as output
    TRISA = 0x00;          // To configure PORTA (LEDs) as output
    PORTA = 0x00;          // Initial value for LEDs (turn all off)
    buzzer = 0;            // Initial value for Buzzer (off)
    relay = 0;             // Initial value for Relay (off)
    while (1) // While loop for repeated operation
    {
        if (lrbit == 0) // To check whether SW0 is pressed
        {
            val = 1; // Latch the status of switch SW0 (you can implement 
actions here if needed)
        }
        if (rlbit == 0) // To check whether SW1 is pressed
        {
            val = 2; // Latch the status of switch SW1
        }
        if (val == 1)
        {
            buzzer = 1;   // Turn on the buzzer
            relay = 1;    // Turn on the relay
            // LED chasing in groups of two from left to right
            for (i = 0; i < 7; i++) // Start LED chase in pairs
            {
                PORTA = (1 << i) | (1 << (i + 1)); // Set two consecutive LEDs 
(bitwise OR)
            }
        }
                msdelay(200); // Delay to create the chase effect
        if (val == 2)
        {
            buzzer = 0;   // Turn off the buzzer
            relay = 0;    // Turn off the relay
            // LED chasing in groups of two from left to right (can modify the 
pattern if needed)
            for (i = 0; i < 7; i++) // Start LED chase in pairs
            {
                PORTA = (1 << i) | (1 << (i + 1)); // Set two consecutive LEDs
        }
            }
                msdelay(200); // Delay to create the chase effect
    }
 }
 // Function Definitions
 void msdelay(unsigned int time) // Function for delay
 {
    unsigned int i, j;
    for (i = 0; i < time; i++)
        for (j = 0; j < 710; j++); // Calibrated for a 1 ms delay in MPLAB
 }